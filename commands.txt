## Commands
This section lists command(s) run by deepTumour workflow

* Running deepTumour

```
        # --- Step 1: filter MAF with criteria ---
        python3 <<CODE
        import csv
        import gzip

        output_bed = "filter.bed"
        open_func = gzip.open if "~{maf_file}".endswith(".gz") else open
        with open_func("~{maf_file}", "rt") as maf, open(output_bed, "w") as out:
            reader = csv.DictReader((l for l in maf if not l.startswith("#")), delimiter="\t")

            for row in reader:
                try:
                    t_depth = int(row.get("t_depth", 0))
                    t_alt = int(row.get("t_alt_count", 0))
                    af = float(row.get("gnomAD_AF", "0") or "0")
                except ValueError:
                    continue

                if (
                    af < ~{gnomad_af}
                    and row["Variant_Classification"] in "~{sep=',' valid_exonic}"
                    and row["Variant_Classification"] not in "~{sep=',' exclude_mutations}"
                    and t_depth > ~{t_depth}
                    and (t_alt / t_depth) > ~{t_vaf}
                ):
                    chrom = row["Chromosome"]
                    start = int(row["Start_Position"]) - 1
                    end = int(row["End_Position"])
                    out.write(f"{chrom}\t{start}\t{end}\n")
        CODE

        # --- Step 2: apply BED filter to original VCF ---
        # Extract tumour/normal names
        grep "^##tumor_sample" ~{vcf_file} | cut -d '=' -f2 > samples.txt
        grep "^##normal_sample" ~{vcf_file} | cut -d '=' -f2 >> samples.txt

        # Subset VCF to variants in BED + reorder samples
        bcftools view -f PASS -S samples.txt -R "$PWD/filter.bed" ~{vcf_file} -Oz -o filtered.vcf.gz

```
```
        set -euo pipefail

        # extract tumour/normal names from header
        zcat ~{vcf_file}|grep "^##tumor_sample"|cut -d '=' -f2 > samples.txt
        zcat ~{vcf_file}|grep "^##normal_sample"|cut -d '=' -f2 >> samples.txt

        # Filter chain:
        #   1. Keep PASS only
        #   2. Reorder samples to Normal, Tumour
        #   3. Filter on tumour depth
        #   4. Filter on tumour VAF
        bcftools view -f PASS -S samples.txt ~{vcf_file} -Ou \
          | bcftools filter -i "(FORMAT/DP[1]) >= ~{t_depth}" -Ou \
          | bcftools filter -i "(FORMAT/AD[1:1])/(FORMAT/DP[1]) >= ~{t_vaf}" -Oz -o filtered.vcf.gz
```
```
        set -euo pipefail

        mkdir out
        source $DEEP_TUMOUR_ROOT/.venv/bin/activate
        python $DEEP_TUMOUR_ROOT/src/DeepTumour.py --vcfFile ~{vcf} --reference $HG19_ROOT/hg19_random.fa ~{liftover} --outDir out --keep_input
        mv out/predictions_DeepTumour.json ~{outputFileNamePrefix}.predictions_DeepTumour.json

```
